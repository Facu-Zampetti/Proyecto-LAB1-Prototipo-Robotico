///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Librerias
#include <AFMotor.h>
#include <Servo.h>

//Inicializar pines de los motores
AF_DCMotor motor1(4, MOTOR34_64KHZ);
AF_DCMotor motor2(2, MOTOR12_64KHZ);
AF_DCMotor bomba(3, MOTOR34_64KHZ);
int valor;
int velocidad = 255;

//Inicializar servomotores
Servo servo1;
Servo servo2;
Servo servo3;
Servo servo4;
int angulo = 0;

//Inicializar pines del led
const int ledPin = 22;
const int ledPin2 = 50;

//Bandera del estado del parpadeo y sirena
bool parpadeo = false;

//Inicializar pin del buzzer
const int buzzerpin = 52;

//Notas para la sirena
#define NOTE_C5 523.25 
#define NOTE_D5 587.33
#define REST      0
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void setup() {
  //Configuracion serial
  Serial.begin(9600);
  Serial1.begin(9600);

  //Configuracion de los leds
  pinMode(ledPin, OUTPUT);
  pinMode(ledPin2, OUTPUT);
  digitalWrite(ledPin, LOW);
  digitalWrite(ledPin2, LOW);

  //Configuracion del buzzer
  pinMode(buzzerpin, OUTPUT);
  noTone(buzzerpin);

  //Configuracion de servos
  servo1.attach(9);
  servo2.attach(10);
  servo3.attach(48);
  servo4.attach(49);

  //Inicializar servos a 0 grados
  servo1.write(180);
  servo2.write(0);
  servo3.write(0);
  servo4.write(90);
}

void blinkingLedAndSiren() {
  //Ejecutar mientras parpadeo sea verdadero
  if (parpadeo) {
    digitalWrite(ledPin, HIGH);
    tone(buzzerpin, NOTE_D5);
    delay(500);
    digitalWrite(ledPin, LOW);
    digitalWrite(ledPin2, HIGH);
    tone(buzzerpin, NOTE_C5);
    delay(500);
    digitalWrite(ledPin2, LOW);
  } else {
    //Asegurarse de apagar buzzer y leds
    noTone(buzzerpin);
    digitalWrite(ledPin, LOW);
    digitalWrite(ledPin2, LOW);
  }
}

void forward() {
  motor1.setSpeed(velocidad);
  motor1.run(FORWARD);
  motor2.setSpeed(velocidad);
  motor2.run(FORWARD);
}

void back() {
  motor1.setSpeed(velocidad);
  motor1.run(BACKWARD);
  motor2.setSpeed(velocidad);
  motor2.run(BACKWARD);
}

void left() {
  motor1.setSpeed(velocidad);
  motor1.run(BACKWARD);
  motor2.setSpeed(velocidad);
  motor2.run(FORWARD);
}

void right() {
  motor1.setSpeed(velocidad);
  motor1.run(FORWARD);
  motor2.setSpeed(velocidad);
  motor2.run(BACKWARD);
}

void moveServos(int start, int end) {
  int step = (start < end) ? 1 : -1;
  for (angulo = start; angulo != end; angulo += step) {
    servo1.write(180-angulo);
    servo2.write(angulo);
    servo3.write(angulo);
    servo4.write(90-angulo);
    delay(30);
  }
}

void robotMode() {
  moveServos(0, 90);
}

void vehicleMode() {
  moveServos(90, 0);
}

void Stop() {
  motor1.setSpeed(0);
  motor1.run(RELEASE);
  motor2.setSpeed(0);
  motor2.run(RELEASE);
}

void startWater() {
  bomba.setSpeed(255); 
  bomba.run(FORWARD);
}

void endWater() {
  bomba.run(RELEASE);
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void loop() {
  //Leer comandos del Bluetooth
  if (Serial1.available() > 0) {
    valor = Serial1.read();
    Stop();
    switch (valor) {
      case 'a': 
        parpadeo = true;
        Serial.println("Prender Luz/Sirena");
        break;

      case 'b': 
        parpadeo = false;
        Serial.println("Apagar Luz/Sirena");
        break;

      case 'c': 
        forward();
        Serial.println("Adelante");
        break;

      case 'd': 
        back();
        Serial.println("Atr√°s");
        break;

      case 'e': 
        left();
        Serial.println("Izquierda");
        break;

      case 'f': 
        right();
        Serial.println("Derecha");
        break;

      case 'g':
        robotMode();
        Serial.println("Transformar a Robot");
        break;

      case 'h': 
        vehicleMode();
        Serial.println("Transformar a Tanque");
        break;

      case 'i': 
        startWater();
        Serial.println("Encender bomba de agua");
        break;

      case 'j': 
        endWater();
        Serial.println("Apagar bomba de agua");
        break;

      case 'k': 
        Stop();
        Serial.println("Detener");
        break;
    }
  }
  //Llamar a la funcion de parpadeo y sirena
  blinkingLedAndSiren();
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
